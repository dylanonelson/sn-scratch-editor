/*!*******************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/prosemirror-view/style/prosemirror.css ***!
  \*******************************************************************************************************/
.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror pre {
  white-space: pre-wrap;
}

.ProseMirror li {
  position: relative;
}

.ProseMirror-hideselection *::selection { background: transparent; }
.ProseMirror-hideselection *::-moz-selection { background: transparent; }
.ProseMirror-hideselection { caret-color: transparent; }

/* See https://github.com/ProseMirror/prosemirror/issues/1421#issuecomment-1759320191 */
.ProseMirror [draggable][contenteditable=false] { user-select: text }

.ProseMirror-selectednode {
  outline: 2px solid #8cf;
}

/* Make sure li selections wrap around markers */

li.ProseMirror-selectednode {
  outline: none;
}

li.ProseMirror-selectednode:after {
  content: "";
  position: absolute;
  left: -32px;
  right: -2px; top: -2px; bottom: -2px;
  border: 2px solid #8cf;
  pointer-events: none;
}

/* Protect against generic img rules */

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
}

/*!******************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \******************************************************************/
/** global */

body {
  --base-font-size: 15px;
  --border-color: 1px solid #ccc;
  --h2-font-size: 16px;
  --h1-font-size: 20px;
  --h3-font-size: 15px;
  --ff-sans: 'Roboto', sans-serif;
  --ff-serif: 'Roboto Slab', serif;
  --ff-mono: 'Roboto Mono', monospace;
  --color-primary: rgb(8, 109, 214);
  --default-gap: 14px;
  --h3-gap: 11px;
  --default-item-gap: 5px;
  --default-checkbox-gap: 8px;
  --text-color: rgba(0, 0, 0, 0.9);
  --h3-text-color: var(
    --sn-stylekit-paragraph-text-color,
    var(--sn-stylekit-foreground-color, rgba(0, 0, 0, 0.7))
  );
  color: var(
    --sn-stylekit-paragraph-text-color,
    var(--sn-stylekit-foreground-color, var(--text-color))
  );
  font-size: var(--base-font-size);
  font-family: var(--ff-serif), serif;
  scrollbar-color: var(--sn-stylekit-scrollbar-color, #ccc)
    var(--sn-stylekit-background-color, white);
}

@media only screen and (max-width: 720px) {
  body {
    --base-font-size: 16px;
    --h2-font-size: 17px;
    --h3-font-size: 17px;
  }
}

* {
  background: inherit;
  border: 0;
  color: inherit;
  font: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
}

*::selection {
  background: var(--sn-stylekit-info-color, var(--color-primary));
}

/* Restore position: fixed behavior when iOS keyboard is open */
html,
body {
  overflow: auto;
  height: 100%;
}

body {
  position: relative;
}

button {
  cursor: pointer;
}

strong {
  font-weight: 700;
}

em {
  font-style: italic;
}

/** application */

div.ProseMirror {
  position: relative;
  /* 80px top padding to account for 41px toolbar */
  padding: 80px 15px 0 15px;
}

div#extender {
  cursor: text;
  height: 120px;
}

h1.sn-editor {
  font-size: var(--h1-font-size);
  font-weight: 300;
  margin-bottom: 12px;
}

.ProseMirror * + h1.sn-editor {
  margin-top: 32px;
}

h2.sn-editor {
  font-size: var(--h2-font-size);
  font-weight: 700;
  margin-bottom: var(--default-gap);
}

.ProseMirror h1 + h2.sn-editor {
  margin-top: 20px;
}

.ProseMirror *:not(h1) + h2.sn-editor {
  margin-top: 28px;
}

h3.sn-editor {
  font-size: var(--h3-font-size);
  color: var(--h3-text-color);
  text-decoration: underline;
  margin-bottom: var(--h3-gap);
}

.ProseMirror h2 + h3.sn-editor {
  margin-top: 20px;
}

.ProseMirror *:not(h1, h2) + h3.sn-editor {
  margin-top: 22px;
}

div.ProseMirror > p.sn-editor {
  line-height: 1.4;
  margin-bottom: var(--default-gap);
}

*:not(ul, ol, h3) + ul {
  margin-top: var(--default-gap);
}

*:not(ul, ol, h3) + ol {
  margin-top: var(--default-gap);
}

ul,
ol {
  margin-left: 25px;
  margin-bottom: var(--default-gap);
}

li {
  margin-bottom: var(--default-item-gap);
}

li p:not(:only-of-type) {
  margin-bottom: var(--default-gap);
}

li ul,
li ol {
  margin-top: var(--default-item-gap);
  margin-bottom: 0;
}

code {
  font-family: var(--ff-mono), monospace;
  background: var(--sn-stylekit-contrast-background-color, #efefef);
}

a {
  color: var(--sn-stylekit-info-color, blue);
}

pre {
  background: var(--sn-stylekit-contrast-background-color, #efefef);
  font-family: var(--ff-mono), monospace;
  margin-bottom: var(--default-gap);
  padding: 4px;
  position: relative;
}

pre[data-markdown_escaped='true'] div.info {
  border-radius: 50%;
  border: 1px solid var(--sn-stylekit-info-color, var(--color-primary));
  color: var(--sn-stylekit-info-color, var(--color-primary));
  cursor: pointer;
  display: block;
  float: right;
  height: 20px;
  position: relative;
  right: 6px;
  text-align: center;
  top: 6px;
  width: 20px;
  line-height: 20px;
}

pre[data-markdown_escaped='true'] div.info:hover:after {
  background: var(--sn-stylekit-background-color, white);
  border-radius: 2px;
  border: 1px solid var(--sn-stylekit-info-color, var(--color-primary));
  content: "This block of code was edited in another editor and contains markdown formatting that Scratch doesn't support yet. It will be serialized into markdown not as a code block but as a normal piece of markdown text.";
  font-size: 12px;
  padding: 5px;
  position: absolute;
  right: 0;
  text-align: left;
  top: 24px;
  width: 250px;
  z-index: 2;
}

pre code {
  background: transparent;
}

.checklist-item {
  align-items: flex-start;
  display: flex;
  padding-left: 30px;
  position: relative;
}

.checklist-item + .checklist-item {
  margin-top: var(--default-checkbox-gap);
}

.checklist-item + *:not(.checklist-item) {
  margin-top: var(--default-gap);
}

.checklist-item .click-target {
  cursor: pointer;
  display: block;
  height: 32px;
  left: 0;
  position: absolute;
  top: -4px;
  width: 32px;
}

.checklist-item div.checkbox {
  box-sizing: border-box;
  height: 24px;
  left: 0;
  margin-right: 6px;
  min-width: 24px;
  padding: 2px;
  position: absolute;
  top: 4px;
}

.checklist-item p {
  line-height: 24px;
  min-width: 1px;
}

#toolbar-wrapper {
  border-bottom: 1px solid var(--sn-stylekit-border-color, #ccc);
  left: 0;
  overflow-x: auto;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 1;
}

#toolbar {
  display: flex;
}

button[data-format]:hover {
  background-color: var(
    --sn-stylekit-secondary-contrast-background-color,
    #eee
  );
}

button.selected:after {
  background: var(--sn-stylekit-contrast-background-color, #aaa);
  bottom: 0;
  content: '';
  display: block;
  height: 3px;
  left: 0;
  position: absolute;
  right: 0;
}

button[data-format] {
  background-color: inherit;
  cursor: pointer;
  height: 40px;
  margin-left: 10px;
  padding: 10px 20px;
  position: relative;
  width: 65px;
}

button[data-format] i {
  display: block;
  height: 25px;
  width: 25px;
}

button[data-format='link']:before,
button[data-format='heading']:before,
button[data-format='outdent']:before {
  background: var(--sn-stylekit-contrast-background-color, #ccc);
  bottom: 7px;
  content: '';
  display: block;
  /* half the 10px margin */
  left: -5px;
  position: absolute;
  top: 7px;
  width: 1px;
}

button[data-format='code_block']:before {
  content: '';
  display: block;
  position: absolute;
  top: 13px;
  bottom: 8px;
  left: 23px;
  right: 23px;
  border: 2px solid currentColor;
  border-radius: 2px;
}

button[data-format='code_block'] i {
  position: relative;
  background: transparent;
}

button[data-format='code_block'] i span {
  display: block;
  height: 18px;
  position: absolute;
  left: 0px;
  top: 0px;
  width: 18px;
  background: var(--sn-stylekit-background-color, white);
  z-index: 2;
}

button[data-format='code_block']:hover span {
  background-color: var(
    --sn-stylekit-secondary-contrast-background-color,
    #eee
  );
}

svg {
  fill: currentColor;
}

/* modal */
div#link-modal {
  align-items: center;
  background: rgba(0, 0, 0, 0.15);
  bottom: 0;
  display: none;
  font-family: var(--ff-sans);
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
}

div#link-modal.active {
  display: flex;
}

div#frame {
  align-items: center;
  background: var(--sn-stylekit-background-color, white);
  border-radius: 2px;
  box-shadow:
    0 2px 2px 0 rgba(0, 0, 0, 0.14),
    0 3px 1px -2px rgba(0, 0, 0, 0.12),
    0 1px 5px 0 rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: 230px;
  justify-content: center;
  padding: 0 35px;
  width: 350px;
}

div#link-modal input {
  background: var(--sn-stylekit-background-color, white);
  border: 1px solid #c8c8c8;
  box-sizing: border-box;
  padding: 5px 8px;
  width: 100%;
}

div#link-modal button {
  cursor: pointer;
}

div#link-modal label {
  display: block;
  text-transform: uppercase;
  font-size: 14px;
  margin-bottom: 4px;
}

div#link-modal label a i {
  display: inline-block;
  height: 14px;
  position: relative;
  top: 2px;
  width: 14px;
}

div#link-modal div.text-input {
  margin-bottom: 15px;
  width: 100%;
}

div#link-modal div.buttons {
  align-items: center;
  display: flex;
  justify-content: flex-end;
  margin-top: 10px;
  position: relative;
  top: 6px;
  width: 100%;
}

div#link-modal button {
  margin-left: 10px;
  padding: 4px 8px;
  text-transform: uppercase;
  font-size: 13px;
}

div#link-modal button#clear {
  display: none;
}

div#link-modal button#clear.active {
  display: block;
}

div#link-modal button#confirm {
  color: var(--sn-stylekit-info-color, var(--color-primary));
}

div#link-tooltip {
  background: var(--sn-stylekit-background-color, white);
  border: 1px solid var(--sn-stylekit-border-color, #ccc);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  display: none;
  max-width: calc(100% - 10px);
  padding: 6px 10px;
  position: absolute;
}

div#link-tooltip.show {
  display: flex;
  align-items: center;
}

div#link-tooltip a {
  display: flex;
  justify-content: center;
  align-items: center;
}

div#link-tooltip div.text {
  display: block;
  margin-right: 6px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

div#link-tooltip i {
  display: block;
  flex: 0 0 14px;
  height: 14px;
  width: 14px;
}

div.auto-link-indicator {
  text-transform: uppercase;
  font-family: var(--ff-mono), monospace;
  font-size: 10px;
  display: none;
  padding-right: 6px;
}

div#link-tooltip.yes-auto-link div.auto-link-indicator {
  display: block;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/